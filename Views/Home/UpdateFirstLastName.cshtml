
@model UpdateFirstLastName;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <style>

        .form-control {
            width: 25%;
        }

        .field-validation-valid {
            display: none;
        }

        .validation-summary-valid {
            display: none;
        }
    </style>
</head>
<body>

    @using (Html.BeginForm("UpdateFirstLastName", "Home"))
    {
        <h3><strong>Update User FirstName/LastName</strong></h3>

        <div class="form-group">
            @Html.RadioButtonFor(model => model.IsUserId, "true") <label>UserId</label>
            @Html.RadioButtonFor(model => model.IsUserId, "false") <label>UserName</label>
            <br>
            @Html.ValidationMessageFor(m => m.IsUserId, "Please select one value", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.TextBoxFor(m => m.UserIdORUserName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.UserIdORUserName, "Value is required", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.FirstName)
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.LastName)
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
        </div>

        <button type="submit" value="Submit" class="btn btn-primary">Submit</button>

        @if (Model != null && !string.IsNullOrEmpty(Model.Message))
        {
            <span id="message">@Html.DisplayFor(m => m.Message)</span>
        }
    }
</body>
</html>